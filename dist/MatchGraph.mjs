import { memo, useState, useEffect } from 'react';
import * as T from 'css-tree';
import { jsxs, jsx } from 'react/jsx-runtime';

function R(o,r,l){typeof r=="string"&&(r={class:r});for(let i in r)i.startsWith("on")?o.addEventListener(i.substring(2),r[i]):o.setAttribute(i,r[i]);return Array.isArray(l)?l.forEach(i=>o.appendChild(i&&i.nodeType?i:W(i))):typeof l=="string"&&(o.innerHTML=l),o}function y(o,r,l){return R(document.createElement(o),r,l)}function B(o,r,l){return R(document.createElementNS("http://www.w3.org/2000/svg",o),r,l)}function W(o){return document.createTextNode(String(o))}var P="https://csstree.github.io/docs/syntax/",X=o=>{var x;let[r,l]=useState(!1);if(useEffect(()=>{l(!0);},[]),!r||typeof window=="undefined")return null;let{name:i}=o,L=(x=T.lexer.getProperty(i))!=null?x:T.lexer.getType(i);if(L===null)return null;let M=(e,p)=>{var u,k;if(e.type==="MatchGraph")return M(e.match,p);let d=!1,m,b,n;if(m=y("div","node-wrapper",[b=y("div","node-content",[n=y("div","node")])]),_.has(e))return n.classList.add("node_recursive"),n.innerHTML="Recursive",p.appendChild(m),!0;switch(e.type==="If"&&(_.set(e,e.value),g.push(e)),E.set(e,{root:m,content:b,main:n}),e.type){case"Match":{n.classList.add("node_match"),n.innerHTML=e.type;for(let c=g.length-1,a=e;c>=0;c--){let s=g[c];if(a===s.then){s.then;break}a=s;}break}case"Mismatch":{n.classList.add("node_mismatch"),n.innerHTML=e.type;for(let c=g.length-1,a=e;c>=0;c--){let s=g[c];if(a===s.then){s.else;break}a=s;}break}case"DisallowEmpty":n.classList.add("node_disallow-empty"),n.innerHTML=e.type;break;case"Type":case"Property":case"Keyword":case"Function":case"Token":case"String":case"Comma":{if(!e.match){let t=!1;switch(e.type){case"Type":t=`<a href="${P}#Type:`+e.name+'" target="_blank">&lt;'+e.name+"&gt;</a>";break;case"Property":t=`<a href="${P}#Property:`+e.name+`" target="_blank">&lt;'`+e.name+"'&gt;</a>";break;case"Function":case"Keyword":t=e.name;break;case"Token":case"String":t=e.value;break;case"Comma":t=",";break}n.classList.add("node_check"),n.innerHTML='<span class="node__label">'+e.type+'</span><span class="node__key">'+t+"</span>";}break}default:{n.classList.add("node_default");let t=m.appendChild(y("div","nested nested_labeled"));n.appendChild(y("div","node__type",e.type)),d=!0;let c=t,a=e.type==="Enum"?e.map:e,s={count:0};for(let h in a){if(a===e&&h==="syntax"||h==="type")continue;let f=a[h],H=f&&typeof f=="object",I=n.appendChild(y("div","node-field",'<span class="node-field-label">'+h+"</span><span>"+(H?'<span class="connection-dot"></span>':typeof f=="function"?"[function]":JSON.stringify(f))+"</span>"));H&&(M(f,t)?c=E.get(f):t!==c&&c.content.appendChild(E.get(f).root),S.push({from:(u=I.lastChild)==null?void 0:u.lastChild,to:(k=E.get(f))==null?void 0:k.main,num:s.count++,total:s}));}}}return p.appendChild(m),e.type==="If"&&g.pop(),d},_=new Map,E=new Map,g=[],S=[],C=y("div","graph"),w;return M(L.match,C),w=B("svg","connections-canvas"),setTimeout(()=>{let e=C.getBoundingClientRect();S.map(function(p){var h;let d=(h=p.from)==null?void 0:h.getBoundingClientRect(),m=p.to.getBoundingClientRect(),b=d.right>m.left,n=d.right-e.left,u=d.top-e.top+d.height/2,k=(b?m.right+1:m.left-1)-e.left-7,t=m.top-e.top+10,c=b?16:12+Math.abs(p.num-p.total.count)*5;if(u===t)return ["M",n,u,"H",k].join(" ");let a=Math.abs(u-t)>16?8:0,s=t<u?-a:a;return ["M",n,u,"h",c-a,"q",[a,0],[a,s],"V",t-s,"q",[0,s],[b?-a:a,s],"H",k].join(" ")}).forEach(function(p){w.appendChild(B("path",{class:"connection",d:p}));});},0),jsxs("div",{className:"view-match-graph",children:[jsx(Y,{}),jsx("div",{className:"canvas",ref:e=>{(e==null?void 0:e.childElementCount)===0&&e.append(w,C);}})]})},Y=()=>jsx("svg",{style:{position:"absolute",zIndex:-1,width:0,height:0},children:jsx("marker",{id:"match-graph-connection-marker",viewBox:"0 0 5 10",refX:"0",refY:"5",markerUnits:"strokeWidth",markerWidth:"6",markerHeight:"4",orient:"auto",children:jsx("path",{d:"M 0 0 L 10 5 L 0 10 z",fill:"rgba(160, 160, 160, 0.65)"})})}),V=memo(X);

export { V as default };
